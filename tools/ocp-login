#!/usr/bin/env python3

# ------------------------------------------------------------------------
# Copyright 2021 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

""" Log into an OpenShift cluster as regular user or as admin user """


# Global modules

import sys


# Local modules

from modules.args    import getCommonArgsParser
from modules.command import CmdShell
from modules.context import getContext
from modules.fail    import fail
from modules.ocp     import ocLogin


# Functions

def _getArgs():
    """ Get command line arguments """
    parser = getCommonArgsParser(
        'Log into OCP'
    )

    parser.add_argument(
        '-u',
        '--user',
        required = False,
        action   ='store_true',
        help     = "Log into OCP as regular user"
    )

    parser.add_argument(
        '-a',
        '--admin',
        required = False,
        action   ='store_true',
        help     = "Log into OCP as admin user"
    )

    return parser.parse_args()


# ----------------------------------------------------------------------

def _main():

    ctx = getContext(_getArgs())

    msg = "Specify excactly one of '-u' or '-a' ('-h' for help)"

    if ctx.ar.user:
        if not ctx.ar.admin:
            print(ocLogin(ctx, ctx.cr.ocp.user))
        else:
            fail(msg)

    elif ctx.ar.admin:
        if not ctx.ar.user:
            print(ocLogin(ctx, ctx.cr.ocp.admin))
        else:
            fail(msg)

    else:
        fail(msg)

    print(f'\nActive user: {CmdShell().run("oc whoami").out}\n')


# ----------------------------------------------------------------------

if __name__ == '__main__':
    try:
        _main()
    except KeyboardInterrupt:
        print()
    sys.exit(0)
