#!/usr/bin/env python3

# ------------------------------------------------------------------------
# Copyright 2021, 2022 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

""" Log into an OpenShift cluster as regular user or as admin user """


try:
    # Global modules

    # None

    # Local modules

    from modules.args    import getCommonArgsParser
    from modules.command import CmdShell
    from modules.context import getContext
    from modules.fail    import fail
    from modules.ocp     import Ocp
    from modules.startup import startup

except ModuleNotFoundError as mnfex:
    from modules.exceptions import setExceptHook
    setExceptHook()
    raise mnfex


# Functions

def _getArgs():
    """ Get command line arguments """
    parser = getCommonArgsParser(
        'Log into OCP'
    )

    parser.add_argument(
        '-u',
        '--user',
        required = False,
        action   ='store_true',
        help     = "Log into OCP as regular user"
    )

    parser.add_argument(
        '-a',
        '--admin',
        required = False,
        action   ='store_true',
        help     = "Log into OCP as admin user"
    )

    parser.add_argument(
        '--project-ignore',
        required = False,
        action   ='store_true',
        help     = "Errors during setProject are ignored if set to False"
    )

    return parser.parse_args()


# ----------------------------------------------------------------------

def _main():

    ctx = getContext(_getArgs())

    msg = "Specify excactly one of '-u' or '-a' ('-h' for help)"

    setProject = True

    if ctx.ar.project_ignore:
        setProject = False

    if ctx.ar.user:
        if not ctx.ar.admin:
            ocp = Ocp(ctx, login="user", logout=False, setProject = setProject)
            result = ocp.ocLogin()
            del ocp
            print(result.out)
        else:
            fail(msg)

    elif ctx.ar.admin:
        if not ctx.ar.user:
            ocp = Ocp(ctx, login="admin", logout=False, setProject = setProject)
            result = ocp.ocLogin()
            del ocp
            print(result.out)
        else:
            fail(msg)

    else:
        fail(msg)

    print(f'\nActive user: {CmdShell().run("oc whoami").out}\n')


# ----------------------------------------------------------------------

if __name__ == '__main__':
    startup(_main)
