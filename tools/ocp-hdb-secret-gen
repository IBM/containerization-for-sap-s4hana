#!/usr/bin/env python3

# ------------------------------------------------------------------------
# Copyright 2020, 2021 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

""" Generate OpenShift HANA secret YAML file """


# Global modules

import sys


# Local modules

from modules.args    import getCommonArgs
from modules.command import CmdShell
from modules.context import getContext
from modules.fail    import fail
from modules.ocp     import ocLogin
from modules.tools   import genFileFromTemplate


# Functions


# ----------------------------------------------------------------------

def _main():

    ctx = getContext(getCommonArgs(
        'Generate OpenShift HANA secret YAML file'
    ))

    secretName = ctx.cf.ocp.containers.di.secret

    if not secretName:
        fail(f"Secret name is not specified in file '{ctx.ar.config_file}'"
             f" - not generating secret")

    templateDir  = f'{ctx.cf.build.repo.root}/openshift'
    templateFile = f'{templateDir}/secret.yaml.template'
    secretFile   = f'{templateDir}/{secretName}.yaml'

    params = {
        'secret-name': secretName,
        'project':     ctx.cf.ocp.project,
        'User':        ctx.cr.refsys.nws4.hdbconnect.name,
        'Password':    ctx.cr.refsys.nws4.hdbconnect.password
    }

    genFileFromTemplate(templateFile, secretFile, params)

    ocLogin(ctx, ctx.cr.ocp.admin)

    CmdShell().run(f'oc apply -f {secretFile}')
    CmdShell().run(f'rm -f {secretFile}')
    print(f'Secret {secretName} created for project {ctx.cf.ocp.project}')


# ----------------------------------------------------------------------

if __name__ == '__main__':
    try:
        _main()
    except KeyboardInterrupt:
        print()
    sys.exit(0)
