#!/usr/bin/env python3

# ------------------------------------------------------------------------
# Copyright 2020 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

""" Tear down overlay file system on NFS server """

# Global modules

import sys

# Local modules

from modules.args     import (
    getCommonArgsParser,
    addArgOverlayUuid,
)
from modules.command  import CmdSsh
from modules.config   import getConfig
from modules.logger   import setupLogging
from modules.nfsTools import (
    getHdbSubDirs,
    getOverlayDirs
)


# Functions


def _getArgs():
    """ Get command line arguments """
    parser = getCommonArgsParser(
        'Tear down overlay file system on NFS server'
    )

    addArgOverlayUuid(parser)

    return parser.parse_args()

# ----------------------------------------------------------------------


def _main():

    args = _getArgs()

    setupLogging(args)

    config = getConfig(args.config_file, True)

    cmdSsh = CmdSsh(config.nfs.host, config.nfs.user)

    # Remove the entries for the overlay file systems from /etc/exports

    cmdSsh.run(f'sed -i.backup -e "/.*{args.overlay_uuid}.*/d" /etc/exports')

    # Remove the overlay file systems from the table of exported NFS file systems

    cmdSsh.run('exportfs -ar')

    # Tear down all overlay file systems

    for subDir in getHdbSubDirs():
        ovld = getOverlayDirs(config, subDir, args.overlay_uuid)
        cmdSsh.run(f'umount {ovld.merged}')
        cmdSsh.run(f'rm -rf {ovld.base}/{subDir}*/* 2>/dev/null')
        cmdSsh.run(f'rmdir -p {ovld.base}/{subDir}* 2>/dev/null')

# ----------------------------------------------------------------------


if __name__ == "__main__":
    _main()
    sys.exit(0)
