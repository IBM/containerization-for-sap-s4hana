#!/usr/bin/env python3

# ------------------------------------------------------------------------
# Copyright 2020, 2021 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

""" Interactively log into a container running in an OpenShift cluster """


# Global modules

import os
import sys


# Local modules

from modules.args    import (
    getCommonArgsParser,
    addArgContainerFlavor
)
from modules.context import getContext
from modules.fail    import fail
from modules.ocp     import (
    getPodName,
    getContainerName
)


# Functions

def _getArgs():
    """ Get command line arguments """
    parser = getCommonArgsParser(
        'Interactively log into a container running in an OpenShift cluster'
    )

    addArgContainerFlavor(parser, ('di', 'ascs', 'hdb'), False)

    return parser.parse_args()


# ----------------------------------------------------------------------

def _main():

    ctx = getContext(_getArgs())

    podName = getPodName(ctx)

    if not podName:
        fail("Cannot get the name of the pod - check if the pod is started.")

    containerName = getContainerName(ctx, ctx.ar.container_flavor)

    print(f"Logging into container '{containerName}' of pod '{podName}'", file=sys.stderr)

    # Don't need an ocLogin() since getPodName() already performed one

    os.execlp('oc', 'oc', 'exec', '-it', podName, '-c', containerName, '--', 'bash')


# ----------------------------------------------------------------------

if __name__ == '__main__':
    try:
        _main()
    except KeyboardInterrupt:
        print()
    sys.exit(0)
