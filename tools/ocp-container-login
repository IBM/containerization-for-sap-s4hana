#!/usr/bin/env python3

# ------------------------------------------------------------------------
# Copyright 2020, 2022 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

""" Interactively log into a container running in an OpenShift cluster """


try:
    # Global modules

    # none

    # Local modules

    from modules.args       import (
        addArgContainerFlavor,
        getCommonArgsParser,
        addArgAppName
    )
    from modules.context    import getContext
    from modules.ocp        import Ocp
    from modules.deployment import Deployments
    from modules.startup    import startup

except ModuleNotFoundError as mnfex:
    from modules.exceptions import setExceptHook
    setExceptHook()
    raise mnfex


# Functions

def _getArgs():
    """ Get command line arguments """
    parser = getCommonArgsParser(
        'Interactively log into a container running in an OpenShift cluster'
    )

    addArgContainerFlavor(parser, ('di', 'ascs', 'hdb'), False)
    addArgAppName(parser)

    return parser.parse_args()


# ----------------------------------------------------------------------

def _main():

    ctx = getContext(_getArgs())
    ocp = Ocp(ctx)
    deployments = Deployments(ctx, ocp, deploymentType = ctx.cs.deployRunning)
    ocp.setAppName(deployments.getValidAppName())

    ocp.containerLogin()


# ----------------------------------------------------------------------

if __name__ == '__main__':
    startup(_main)
