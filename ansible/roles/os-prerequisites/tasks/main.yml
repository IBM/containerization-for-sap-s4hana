---
# ------------------------------------------------------------------------
# Copyright 2020, 2021 IBM Corp. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------

# check if oc tool is installed and copy it from helper node if not installed
- import_tasks: check_oc_tool.yml

# check temp directory for image builds
- name: create temp directory for image builds
  file:
    path: "{{ tmp_root }}"
    state: directory

# verify connection to  NFS server and create directories for HDB copy
- import_tasks: verify_nfs_server.yml
 
# verify NFS directories on NFS server for HDB copy and overlay share
- import_tasks: verify_nfs_hdb_directories.yml
  
# install all required libraries
- name: install podman
  package:
    name: podman
    state: "{{ package_state }}"
- name: install a "{{ package_state }}" version of git
  package:
    name: git
    state: "{{ package_state }}"
- name: install {{ python3x_version }}
  package:
    name: "{{ python3x_version }}"
    state: "{{ package_state }}"  
- name: install "{{ python3x_version }}-devel"
  package:
    name: "{{ python3x_version }}-devel"
    state: "{{ package_state }}"
- name: install "{{ python3x_version }}-pip"
  package:
    name: "{{ python3x_version }}-pip"
    state: "{{ package_state }}"

- name: set up a Python virtual environment with all Python modules
  shell: "cd {{ path_to_ocp_tool }} && ./tools/venv-setup "
  register: outmsg
  ignore_errors: true
- debug: var=outmsg.stdout_lines
- name: check failed venv setup
  debug: var=outmsg.stderr_lines
  failed_when: outmsg.rc != 0
  when: outmsg.rc != 0
  
- name: activate virtual environment
  shell: "source {{ path_to_ocp_tool }}/venv/bin/activate"
  register: outmsg
- debug: var=outmsg

# generate config.yml and verify its parameters
- import_tasks: gen-config-creds.yml

- name: add cluster ip to /etc/hosts
  shell: "cd {{path_to_ocp_tool}} && source ./venv/bin/activate && ./tools/ocp-etc-hosts -c ./config.yaml -q ./creds.yaml -w"
  register: outmsg
- debug: var=outmsg

# check connection to OCP4 cluster
- import_tasks: check_connection_to_ocp4_cluster.yml
